name: Render Classement

on:
  schedule:
    - cron: "0 * * * *"     # (optionnel) toutes les heures UTC
  workflow_dispatch:         # bouton "Run workflow"

jobs:
  render:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Sanity check imports
          python - << 'PY'
          import sys
          print("✅ Python:", sys.version)
          import gspread, PIL
          print("✅ gspread:", gspread.__version__)
          import PIL.Image as I
          print("✅ Pillow OK")
          PY

      - name: Recreate service account file from secret
        run: |
          if [ -z "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" ]; then
            echo "❌ Secret GOOGLE_APPLICATION_CREDENTIALS_JSON manquant."
            exit 1
          fi
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > service-account.json
          # Vérif basique (ne pas afficher le contenu pour garder le secret)
          test -s service-account.json || (echo "❌ service-account.json vide"; exit 1)
          echo "✅ service-account.json créé (taille: $(stat -c%s service-account.json) octets)"

      - name: Verify project files exist
        run: |
          ls -la
          test -f render_classement.py || (echo "❌ render_classement.py introuvable"; exit 1)
          test -f classement.png || (echo "❌ classement.png introuvable à la racine"; exit 1)
          test -f Oswald-Medium.ttf || (echo "❌ Oswald-Medium.ttf introuvable à la racine"; exit 1)
          echo "✅ Fichiers présents"

      - name: Run render script
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "${{ github.workspace }}/service-account.json"
          # Tu peux surcharger ici si besoin :
          # SHEET_URL: "https://docs.google.com/spreadsheets/d/1ESiWCUnd0ndupA6WocooLcbB6qqf_gx4jShZ0K6Ef7Y"
          FONT_PATH: "Oswald-Medium.ttf"
          BASE_IMAGE_PATH: "classement.png"
          OUTPUT_PATH: "render.png"
          DEBUG: "0"
        run: |
          set -e
          python render_classement.py
          echo "✅ Script terminé"

      - name: Upload artifact (render.png)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: classement-render
          path: render.png

      # (Optionnel) Commit de l'image générée dans le repo
      - name: Commit render.png back to repo
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add render.png
          git diff --quiet --cached || git commit -m "update render $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          git push
